{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","layout","props","Fragment","className","style","Content","children","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","ingredients","Object","keys","map","igkey","Array","_","i","BurgerIngredient","key","reduce","previous","current","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","OrderButton","ordered","purchasable","backdrop","show","Backdrop","clicked","modal","modalClosed","Modal","transform","opacity","button","Button","btnType","join","orderSummary","ingredientSummary","igKey","textTransform","purchaseCanceled","purchaseContinued","INGREDIENT_PRICE","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","purchasing","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","alert","addIngredientHandler","updatedCounted","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","sum","elem","this","disabledInfo","OrderSummary","Component","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74537e7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","import React from 'react';\nimport style from './Layout.module.css';\n\nconst layout = (props) => (\n    <React.Fragment>\n        <div>Toolbar, SideDrawer, Backdrop</div>\n        <main className={style.Content}>\n            {props.children}\n        </main>\n    </React.Fragment>\n);\n\nexport default layout;","import React from \"react\";\nimport style from \"./BurgerIngredient.module.css\";\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n\n    let ingredient;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={style.BreadBottom}/>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={style.BreadTop}>\n                    <div className={style.Seeds1}/>\n                    <div className={style.Seeds2}/>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={style.Meat}/>\n            break;\n        case ('cheese'):\n            ingredient = <div className={style.Cheese}/>\n            break;\n        case ('salad'):\n            ingredient = <div className={style.Salad}/>\n            break;\n        case ('bacon'):\n            ingredient = <div className={style.Bacon}/>\n            break;\n        default:\n            ingredient = null;\n    }\n\n    return (ingredient)\n\n};\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default burgerIngredient;","import React from \"react\";\nimport style from './Burger.module.css';\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = (props) => {\n\n    let ingredients = Object.keys(props.ingredients)\n        .map(igkey => {\n            return [...Array(props.ingredients[igkey])].map((_, i) => {\n                return <BurgerIngredient key={igkey + i} type={igkey}/>\n            })\n        })\n        .reduce((previous, current) => {\n            return previous.concat(current)\n        }, []);\n\n    if (ingredients.length === 0) {\n       ingredients = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className={style.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {ingredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n}\n\nexport default burger;","import React from \"react\";\nimport style from \"./BuildControl.module.css\";\n\nconst buildControl = (props) => (\n    <div className={style.BuildControl}>\n        <div className={style.Label}>{props.label}</div>\n        <button\n            className={style.Less}\n            onClick={props.removed}\n            disabled={props.disabled}>\n            Less\n        </button>\n        <button\n            className={style.More}\n            onClick={props.added}>\n            More\n        </button>\n    </div>\n)\n\nexport default buildControl;","import React from \"react\";\nimport style from \"./BuildControls.module.css\"\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n]\n\nconst buildControls = (props) => {\n    return (\n        <div className={style.BuildControls}>\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n            {controls.map(control => {\n                return <BuildControl\n                    key={control.label}\n                    label={control.label}\n                    disabled={props.disabled[control.type]}\n                    added={() => props.ingredientAdded(control.type)}\n                    removed={() => props.ingredientRemoved(control.type)}/>\n            })}\n            <button\n                className={style.OrderButton}\n                onClick={props.ordered}\n                disabled={!props.purchasable}>ORDER NOW\n            </button>\n        </div>\n    )\n}\n\nexport default buildControls;","import React from \"react\";\nimport style from './Backdrop.module.css'\n\nconst backdrop = (props) => {\n    return (\n        props.show ?\n            <div\n                className={style.Backdrop}\n                onClick={props.clicked}/>\n            : null\n    );\n}\n\nexport default backdrop;","import React from \"react\";\nimport style from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nconst modal = (props) => (\n    <React.Fragment>\n        <Backdrop\n            show={props.show}\n            clicked={props.modalClosed}/>\n        <div\n            className={style.Modal}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </React.Fragment>\n);\n\nexport default modal;","import React from \"react\";\nimport style from \"./Button.module.css\";\n\nconst button = (props) => (\n    <button\n        className={[style.Button, style[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n)\n\nexport default button;\n\n","import React from \"react\";\nimport Button from \"../../UI/Button/Button\";\n\nconst orderSummary = (props) => {\n\n    //<li>Salad: 1</li>\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n            );\n        });\n\n    return (\n        <React.Fragment>\n            <h3>Your order:</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType='Danger' clicked={props.purchaseCanceled}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.purchaseContinued}>CONTINUE</Button>\n        </React.Fragment>\n    );\n\n}\n\nexport default orderSummary;","import React, {Component} from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\n\nconst INGREDIENT_PRICE = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n\n    /*\n        constructor(props) {\n            super(props);\n            this.state = {}\n        }\n    */\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false\n    }\n\n    updatePurchaseState(ingredients) {\n\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, elem) => {\n                return sum + elem;\n            }, 0);\n\n        this.setState({\n            purchasable: sum > 0\n        });\n    }\n\n    purchaseHandler = () => {\n        this.setState({\n            purchasing: true\n        });\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({\n            purchasing: false\n        })\n    }\n\n    purchaseContinueHandler = () => {\n        alert(\"You continue!\");\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n\n        const priceAddition = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice\n        })\n\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n\n        if (oldCount <= 0) {\n            return;\n        }\n\n        const updatedCounted = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n\n        const priceDeduction = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice\n        })\n\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    render() {\n\n        // {salad: true, meat: false, ...}\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        return (\n            <React.Fragment>\n                <Modal\n                    show={this.state.purchasing}\n                    modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary\n                        price={this.state.totalPrice}\n                        ingredients={this.state.ingredients}\n                        purchaseCanceled={this.purchaseCancelHandler}\n                        purchaseContinued={this.purchaseContinueHandler}/>\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                    price={this.state.totalPrice}\n                    disabled={disabledInfo}\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    ordered={this.purchaseHandler}\n                    purchasable={this.state.purchasable}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React, {Component} from 'react';\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <BurgerBuilder/>\n                </Layout>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}